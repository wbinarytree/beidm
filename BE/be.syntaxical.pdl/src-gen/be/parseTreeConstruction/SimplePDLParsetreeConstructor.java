/*
* generated by Xtext
*/
package be.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import be.services.SimplePDLGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class SimplePDLParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private SimplePDLGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_Group(this, this, 0, inst);
			case 1: return new ProcessElement_Alternatives(this, this, 1, inst);
			case 2: return new WorkDefinition_Group(this, this, 2, inst);
			case 3: return new WorkSequence_Group(this, this, 3, inst);
			case 4: return new Guidance_Group(this, this, 4, inst);
			case 5: return new RessourceDefinition_Group(this, this, 5, inst);
			case 6: return new RessourceInstance_Group(this, this, 6, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Process ****************
 *
 * Process:
 * 	{Process} "process" name=EString "{" (processElements+=ProcessElement processElements+=ProcessElement*)? "}";
 *
 **/

// {Process} "process" name=EString "{" (processElements+=ProcessElement processElements+=ProcessElement*)? "}"
protected class Process_Group extends GroupToken {
	
	public Process_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getProcessAccess().getProcessAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Process}
protected class Process_ProcessAction_0 extends ActionToken  {

	public Process_ProcessAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getProcessAccess().getProcessAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "process"
protected class Process_ProcessKeyword_1 extends KeywordToken  {
	
	public Process_ProcessKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessAccess().getProcessKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_ProcessAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Process_NameAssignment_2 extends AssignmentToken  {
	
	public Process_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_ProcessKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getProcessAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getProcessAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Process_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Process_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (processElements+=ProcessElement processElements+=ProcessElement*)?
protected class Process_Group_4 extends GroupToken {
	
	public Process_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getProcessAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_ProcessElementsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Process_ProcessElementsAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// processElements+=ProcessElement
protected class Process_ProcessElementsAssignment_4_0 extends AssignmentToken  {
	
	public Process_ProcessElementsAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessAccess().getProcessElementsAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessElement_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processElements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processElements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessAccess().getProcessElementsProcessElementParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Process_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// processElements+=ProcessElement*
protected class Process_ProcessElementsAssignment_4_1 extends AssignmentToken  {
	
	public Process_ProcessElementsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getProcessAccess().getProcessElementsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessElement_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("processElements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("processElements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getProcessElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getProcessAccess().getProcessElementsProcessElementParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Process_ProcessElementsAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Process_ProcessElementsAssignment_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Process_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Process_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Process_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Process_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Process ****************/


/************ begin Rule ProcessElement ****************
 *
 * ProcessElement:
 * 	WorkDefinition | WorkSequence | Guidance | RessourceDefinition | RessourceInstance;
 *
 **/

// WorkDefinition | WorkSequence | Guidance | RessourceDefinition | RessourceInstance
protected class ProcessElement_Alternatives extends AlternativesToken {

	public ProcessElement_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ProcessElement_WorkDefinitionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ProcessElement_WorkSequenceParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ProcessElement_GuidanceParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ProcessElement_RessourceDefinitionParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ProcessElement_RessourceInstanceParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGuidanceAccess().getGuidanceAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRessourceDefinitionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRessourceInstanceRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWorkDefinitionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWorkSequenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// WorkDefinition
protected class ProcessElement_WorkDefinitionParserRuleCall_0 extends RuleCallToken {
	
	public ProcessElement_WorkDefinitionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getWorkDefinitionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWorkDefinitionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(WorkDefinition_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// WorkSequence
protected class ProcessElement_WorkSequenceParserRuleCall_1 extends RuleCallToken {
	
	public ProcessElement_WorkSequenceParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getWorkSequenceParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWorkSequenceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(WorkSequence_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Guidance
protected class ProcessElement_GuidanceParserRuleCall_2 extends RuleCallToken {
	
	public ProcessElement_GuidanceParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getGuidanceParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Guidance_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGuidanceAccess().getGuidanceAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Guidance_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RessourceDefinition
protected class ProcessElement_RessourceDefinitionParserRuleCall_3 extends RuleCallToken {
	
	public ProcessElement_RessourceDefinitionParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getRessourceDefinitionParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceDefinition_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRessourceDefinitionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(RessourceDefinition_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RessourceInstance
protected class ProcessElement_RessourceInstanceParserRuleCall_4 extends RuleCallToken {
	
	public ProcessElement_RessourceInstanceParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getProcessElementAccess().getRessourceInstanceParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRessourceInstanceRule().getType().getClassifier())
			return null;
		if(checkForRecursion(RessourceInstance_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ProcessElement ****************/



/************ begin Rule WorkDefinition ****************
 *
 * / *('linksToPredecessors' '(' linksToPredecessors+=[WorkSequence|EString] ( "," linksToPredecessors+=[WorkSequence|EString])* ')' )?
 * 		('linksToSuccessors' '(' linksToSuccessors+=[WorkSequence|EString] ( "," linksToSuccessors+=[WorkSequence|EString])* ')' )?
 * 		('linksToRessources' '(' linksToRessources+=[RessourceInstance|EString] ( "," linksToRessources+=[RessourceInstance|EString])* ')' )?* / WorkDefinition:
 * 	"wd" name=EString "min" min_time=EInt "max" max_time=EInt;
 *
 **/

// "wd" name=EString "min" min_time=EInt "max" max_time=EInt
protected class WorkDefinition_Group extends GroupToken {
	
	public WorkDefinition_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_Max_timeAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWorkDefinitionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "wd"
protected class WorkDefinition_WdKeyword_0 extends KeywordToken  {
	
	public WorkDefinition_WdKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getWdKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class WorkDefinition_NameAssignment_1 extends AssignmentToken  {
	
	public WorkDefinition_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_WdKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWorkDefinitionAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWorkDefinitionAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "min"
protected class WorkDefinition_MinKeyword_2 extends KeywordToken  {
	
	public WorkDefinition_MinKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getMinKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// min_time=EInt
protected class WorkDefinition_Min_timeAssignment_3 extends AssignmentToken  {
	
	public WorkDefinition_Min_timeAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getMin_timeAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_MinKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("min_time",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("min_time");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWorkDefinitionAccess().getMin_timeEIntParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWorkDefinitionAccess().getMin_timeEIntParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// "max"
protected class WorkDefinition_MaxKeyword_4 extends KeywordToken  {
	
	public WorkDefinition_MaxKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getMaxKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_Min_timeAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// max_time=EInt
protected class WorkDefinition_Max_timeAssignment_5 extends AssignmentToken  {
	
	public WorkDefinition_Max_timeAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkDefinitionAccess().getMax_timeAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkDefinition_MaxKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("max_time",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("max_time");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWorkDefinitionAccess().getMax_timeEIntParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWorkDefinitionAccess().getMax_timeEIntParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule WorkDefinition ****************/


/************ begin Rule WorkSequence ****************
 *
 * WorkSequence:
 * 	"ws" linkType=WorkSequenceType "from" predecessor=[WorkDefinition|EString] "to" successor=[WorkDefinition|EString];
 *
 **/

// "ws" linkType=WorkSequenceType "from" predecessor=[WorkDefinition|EString] "to" successor=[WorkDefinition|EString]
protected class WorkSequence_Group extends GroupToken {
	
	public WorkSequence_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_SuccessorAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWorkSequenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "ws"
protected class WorkSequence_WsKeyword_0 extends KeywordToken  {
	
	public WorkSequence_WsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getWsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// linkType=WorkSequenceType
protected class WorkSequence_LinkTypeAssignment_1 extends AssignmentToken  {
	
	public WorkSequence_LinkTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getLinkTypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_WsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("linkType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("linkType");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getWorkSequenceAccess().getLinkTypeWorkSequenceTypeEnumRuleCall_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getWorkSequenceAccess().getLinkTypeWorkSequenceTypeEnumRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "from"
protected class WorkSequence_FromKeyword_2 extends KeywordToken  {
	
	public WorkSequence_FromKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getFromKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_LinkTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// predecessor=[WorkDefinition|EString]
protected class WorkSequence_PredecessorAssignment_3 extends AssignmentToken  {
	
	public WorkSequence_PredecessorAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getPredecessorAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_FromKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("predecessor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("predecessor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getWorkSequenceAccess().getPredecessorWorkDefinitionCrossReference_3_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getWorkSequenceAccess().getPredecessorWorkDefinitionCrossReference_3_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "to"
protected class WorkSequence_ToKeyword_4 extends KeywordToken  {
	
	public WorkSequence_ToKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getToKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_PredecessorAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// successor=[WorkDefinition|EString]
protected class WorkSequence_SuccessorAssignment_5 extends AssignmentToken  {
	
	public WorkSequence_SuccessorAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWorkSequenceAccess().getSuccessorAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WorkSequence_ToKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("successor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("successor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getWorkSequenceAccess().getSuccessorWorkDefinitionCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getWorkSequenceAccess().getSuccessorWorkDefinitionCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}


/************ end Rule WorkSequence ****************/


/************ begin Rule Guidance ****************
 *
 * Guidance:
 * 	{Guidance} / *'Guidance'
 * 	'{'
 * 		('text' text=EString)?
 * 		('element' '(' element+=[ProcessElement|EString] ( "," element+=[ProcessElement|EString])* ')' )?
 * 	'}'* / "--" text=STRING;
 *
 **/

// {Guidance} / *'Guidance'
// 	'{'
// 		('text' text=EString)?
// 		('element' '(' element+=[ProcessElement|EString] ( "," element+=[ProcessElement|EString])* ')' )?
// 	'}'* / "--" text=STRING
protected class Guidance_Group extends GroupToken {
	
	public Guidance_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGuidanceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Guidance_TextAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGuidanceAccess().getGuidanceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Guidance}
protected class Guidance_GuidanceAction_0 extends ActionToken  {

	public Guidance_GuidanceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getGuidanceAccess().getGuidanceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// / *'Guidance'
// 	'{'
// 		('text' text=EString)?
// 		('element' '(' element+=[ProcessElement|EString] ( "," element+=[ProcessElement|EString])* ')' )?
// 	'}'* / "--"
protected class Guidance_HyphenMinusHyphenMinusKeyword_1 extends KeywordToken  {
	
	public Guidance_HyphenMinusHyphenMinusKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGuidanceAccess().getHyphenMinusHyphenMinusKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Guidance_GuidanceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// text=STRING
protected class Guidance_TextAssignment_2 extends AssignmentToken  {
	
	public Guidance_TextAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGuidanceAccess().getTextAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Guidance_HyphenMinusHyphenMinusKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGuidanceAccess().getTextSTRINGTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGuidanceAccess().getTextSTRINGTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Guidance ****************/


/************ begin Rule RessourceDefinition ****************
 *
 * RessourceDefinition:
 * 	"rd" name=EString "number" number=EInt;
 *
 **/

// "rd" name=EString "number" number=EInt
protected class RessourceDefinition_Group extends GroupToken {
	
	public RessourceDefinition_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRessourceDefinitionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceDefinition_NumberAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRessourceDefinitionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "rd"
protected class RessourceDefinition_RdKeyword_0 extends KeywordToken  {
	
	public RessourceDefinition_RdKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceDefinitionAccess().getRdKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class RessourceDefinition_NameAssignment_1 extends AssignmentToken  {
	
	public RessourceDefinition_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRessourceDefinitionAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceDefinition_RdKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRessourceDefinitionAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getRessourceDefinitionAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "number"
protected class RessourceDefinition_NumberKeyword_2 extends KeywordToken  {
	
	public RessourceDefinition_NumberKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceDefinitionAccess().getNumberKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceDefinition_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// number=EInt
protected class RessourceDefinition_NumberAssignment_3 extends AssignmentToken  {
	
	public RessourceDefinition_NumberAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRessourceDefinitionAccess().getNumberAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceDefinition_NumberKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("number",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("number");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRessourceDefinitionAccess().getNumberEIntParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getRessourceDefinitionAccess().getNumberEIntParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule RessourceDefinition ****************/


/************ begin Rule RessourceInstance ****************
 *
 * RessourceInstance:
 * 	"ri" "type" type=[RessourceDefinition|EString] "activity" activity=[WorkDefinition|EString] "instances"
 * 	instances=EInt;
 *
 **/

// "ri" "type" type=[RessourceDefinition|EString] "activity" activity=[WorkDefinition|EString] "instances" instances=EInt
protected class RessourceInstance_Group extends GroupToken {
	
	public RessourceInstance_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_InstancesAssignment_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRessourceInstanceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "ri"
protected class RessourceInstance_RiKeyword_0 extends KeywordToken  {
	
	public RessourceInstance_RiKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getRiKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "type"
protected class RessourceInstance_TypeKeyword_1 extends KeywordToken  {
	
	public RessourceInstance_TypeKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getTypeKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_RiKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=[RessourceDefinition|EString]
protected class RessourceInstance_TypeAssignment_2 extends AssignmentToken  {
	
	public RessourceInstance_TypeAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getTypeAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_TypeKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRessourceInstanceAccess().getTypeRessourceDefinitionCrossReference_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRessourceInstanceAccess().getTypeRessourceDefinitionCrossReference_2_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "activity"
protected class RessourceInstance_ActivityKeyword_3 extends KeywordToken  {
	
	public RessourceInstance_ActivityKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getActivityKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_TypeAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// activity=[WorkDefinition|EString]
protected class RessourceInstance_ActivityAssignment_4 extends AssignmentToken  {
	
	public RessourceInstance_ActivityAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getActivityAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_ActivityKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("activity",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("activity");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRessourceInstanceAccess().getActivityWorkDefinitionCrossReference_4_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRessourceInstanceAccess().getActivityWorkDefinitionCrossReference_4_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "instances"
protected class RessourceInstance_InstancesKeyword_5 extends KeywordToken  {
	
	public RessourceInstance_InstancesKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getInstancesKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_ActivityAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// instances=EInt
protected class RessourceInstance_InstancesAssignment_6 extends AssignmentToken  {
	
	public RessourceInstance_InstancesAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRessourceInstanceAccess().getInstancesAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RessourceInstance_InstancesKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("instances",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("instances");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRessourceInstanceAccess().getInstancesEIntParserRuleCall_6_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getRessourceInstanceAccess().getInstancesEIntParserRuleCall_6_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule RessourceInstance ****************/


}
