// automatically generated by Xtext
grammar be.SimplePDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Process returns Process:
	{Process}
	'process'
		name=EString
		'{'
			(processElements+=ProcessElement (processElements+=ProcessElement)* )?
		'}'
	;

ProcessElement returns ProcessElement:
	WorkDefinition | WorkSequence | Guidance | RessourceDefinition | RessourceInstance
	;

EString returns ecore::EString:
	STRING | ID
	;

WorkDefinition returns WorkDefinition:
	'wd'
		name=EString
		'min' min_time=EInt
		'max' max_time=EInt
		/*('linksToPredecessors' '(' linksToPredecessors+=[WorkSequence|EString] ( "," linksToPredecessors+=[WorkSequence|EString])* ')' )?
		('linksToSuccessors' '(' linksToSuccessors+=[WorkSequence|EString] ( "," linksToSuccessors+=[WorkSequence|EString])* ')' )?
		('linksToRessources' '(' linksToRessources+=[RessourceInstance|EString] ( "," linksToRessources+=[RessourceInstance|EString])* ')' )?*/
	;

WorkSequence returns WorkSequence:
	'ws'
		linkType=WorkSequenceType
		'from' predecessor=[WorkDefinition|EString]
		'to' successor=[WorkDefinition|EString]
	;

Guidance returns Guidance:
	{Guidance}
	/*'Guidance'
	'{'
		('text' text=EString)?
		('element' '(' element+=[ProcessElement|EString] ( "," element+=[ProcessElement|EString])* ')' )?
	'}'*/
	text=STRING
	;

RessourceDefinition returns RessourceDefinition:
	'rd'
		name=EString
		'number' number=EInt
	;

RessourceInstance returns RessourceInstance:
	'ri'
		'type' type=[RessourceDefinition|EString]
		'activity' activity=[WorkDefinition|EString]
		'instances' instances=EInt
	;

EInt returns ecore::EInt:
	'-'? INT
	;

enum WorkSequenceType returns WorkSequenceType:
	startToStart = 's2s'
	| startToFinish = 's2f'
	| finishToStart = 'f2s'
	| finishToFinish = 'f2f'
	;
