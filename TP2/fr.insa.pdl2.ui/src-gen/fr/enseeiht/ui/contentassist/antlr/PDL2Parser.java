/*
* generated by Xtext
*/
package fr.enseeiht.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.enseeiht.services.PDL2GrammarAccess;

public class PDL2Parser extends AbstractContentAssistParser {
	
	@Inject
	private PDL2GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.enseeiht.ui.contentassist.antlr.internal.InternalPDL2Parser createParser() {
		fr.enseeiht.ui.contentassist.antlr.internal.InternalPDL2Parser result = new fr.enseeiht.ui.contentassist.antlr.internal.InternalPDL2Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getProcessElementAccess().getAlternatives(), "rule__ProcessElement__Alternatives");
					put(grammarAccess.getWorkSequenceKindStartAccess().getAlternatives(), "rule__WorkSequenceKindStart__Alternatives");
					put(grammarAccess.getWorkSequenceKindFinishAccess().getAlternatives(), "rule__WorkSequenceKindFinish__Alternatives");
					put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup(), "rule__WorkDefinition__Group__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup_3(), "rule__WorkDefinition__Group_3__0");
					put(grammarAccess.getWorkDefinitionAccess().getGroup_4(), "rule__WorkDefinition__Group_4__0");
					put(grammarAccess.getDependanceStartAccess().getGroup(), "rule__DependanceStart__Group__0");
					put(grammarAccess.getDependanceFinishAccess().getGroup(), "rule__DependanceFinish__Group__0");
					put(grammarAccess.getProcessAccess().getNameAssignment_1(), "rule__Process__NameAssignment_1");
					put(grammarAccess.getProcessAccess().getProcessElementsAssignment_3(), "rule__Process__ProcessElementsAssignment_3");
					put(grammarAccess.getWorkDefinitionAccess().getNameAssignment_1(), "rule__WorkDefinition__NameAssignment_1");
					put(grammarAccess.getWorkDefinitionAccess().getLinksToPredecessorsAssignment_3_2(), "rule__WorkDefinition__LinksToPredecessorsAssignment_3_2");
					put(grammarAccess.getWorkDefinitionAccess().getLinksToSuccessorsAssignment_4_2(), "rule__WorkDefinition__LinksToSuccessorsAssignment_4_2");
					put(grammarAccess.getDependanceStartAccess().getPredecessorAssignment_0(), "rule__DependanceStart__PredecessorAssignment_0");
					put(grammarAccess.getDependanceStartAccess().getLinkAssignment_1(), "rule__DependanceStart__LinkAssignment_1");
					put(grammarAccess.getWorkSequenceKindStartAccess().getStarted2StartAssignment_0(), "rule__WorkSequenceKindStart__Started2StartAssignment_0");
					put(grammarAccess.getWorkSequenceKindStartAccess().getStarted2FinishAssignment_1(), "rule__WorkSequenceKindStart__Started2FinishAssignment_1");
					put(grammarAccess.getDependanceFinishAccess().getPredecessorAssignment_0(), "rule__DependanceFinish__PredecessorAssignment_0");
					put(grammarAccess.getDependanceFinishAccess().getLinkAssignment_1(), "rule__DependanceFinish__LinkAssignment_1");
					put(grammarAccess.getWorkSequenceKindFinishAccess().getFinished2StartAssignment_0(), "rule__WorkSequenceKindFinish__Finished2StartAssignment_0");
					put(grammarAccess.getWorkSequenceKindFinishAccess().getFinished2FinishAssignment_1(), "rule__WorkSequenceKindFinish__Finished2FinishAssignment_1");
					put(grammarAccess.getGuidanceAccess().getTextAssignment(), "rule__Guidance__TextAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.enseeiht.ui.contentassist.antlr.internal.InternalPDL2Parser typedParser = (fr.enseeiht.ui.contentassist.antlr.internal.InternalPDL2Parser) parser;
			typedParser.entryRuleProcess();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PDL2GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PDL2GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
