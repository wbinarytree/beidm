/*
* generated by Xtext
*/

package fr.insa.petrinet.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PetrinetGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class PetriNetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PetriNet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPetrinetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNoeudsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNoeudsNoeudParserRuleCall_3_0 = (RuleCall)cNoeudsAssignment_3.eContents().get(0);
		private final Assignment cArcsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cArcsArcParserRuleCall_4_0 = (RuleCall)cArcsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PetriNet:
		//	"petrinet" name=ID "{" noeuds+=Noeud* arcs+=Arc* "}";
		public ParserRule getRule() { return rule; }

		//"petrinet" name=ID "{" noeuds+=Noeud* arcs+=Arc* "}"
		public Group getGroup() { return cGroup; }

		//"petrinet"
		public Keyword getPetrinetKeyword_0() { return cPetrinetKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//noeuds+=Noeud*
		public Assignment getNoeudsAssignment_3() { return cNoeudsAssignment_3; }

		//Noeud
		public RuleCall getNoeudsNoeudParserRuleCall_3_0() { return cNoeudsNoeudParserRuleCall_3_0; }

		//arcs+=Arc*
		public Assignment getArcsAssignment_4() { return cArcsAssignment_4; }

		//Arc
		public RuleCall getArcsArcParserRuleCall_4_0() { return cArcsArcParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ArcElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Arc");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArcKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cSourceNoeudCrossReference_4_0 = (CrossReference)cSourceAssignment_4.eContents().get(0);
		private final RuleCall cSourceNoeudIDTerminalRuleCall_4_0_1 = (RuleCall)cSourceNoeudCrossReference_4_0.eContents().get(1);
		private final Keyword cTargetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTargetAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cTargetNoeudCrossReference_6_0 = (CrossReference)cTargetAssignment_6.eContents().get(0);
		private final RuleCall cTargetNoeudIDTerminalRuleCall_6_0_1 = (RuleCall)cTargetNoeudCrossReference_6_0.eContents().get(1);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cArcTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cArcTypeArcKindTypeEnumRuleCall_8_0 = (RuleCall)cArcTypeAssignment_8.eContents().get(0);
		private final Keyword cWeightKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cWeightAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cWeightINTTerminalRuleCall_10_0 = (RuleCall)cWeightAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Arc:
		//	"arc" name=ID "{" "source" source=[Noeud] "target" target=[Noeud] "type" arcType=ArcKindType "weight" weight=INT "}";
		public ParserRule getRule() { return rule; }

		//"arc" name=ID "{" "source" source=[Noeud] "target" target=[Noeud] "type" arcType=ArcKindType "weight" weight=INT "}"
		public Group getGroup() { return cGroup; }

		//"arc"
		public Keyword getArcKeyword_0() { return cArcKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"source"
		public Keyword getSourceKeyword_3() { return cSourceKeyword_3; }

		//source=[Noeud]
		public Assignment getSourceAssignment_4() { return cSourceAssignment_4; }

		//[Noeud]
		public CrossReference getSourceNoeudCrossReference_4_0() { return cSourceNoeudCrossReference_4_0; }

		//ID
		public RuleCall getSourceNoeudIDTerminalRuleCall_4_0_1() { return cSourceNoeudIDTerminalRuleCall_4_0_1; }

		//"target"
		public Keyword getTargetKeyword_5() { return cTargetKeyword_5; }

		//target=[Noeud]
		public Assignment getTargetAssignment_6() { return cTargetAssignment_6; }

		//[Noeud]
		public CrossReference getTargetNoeudCrossReference_6_0() { return cTargetNoeudCrossReference_6_0; }

		//ID
		public RuleCall getTargetNoeudIDTerminalRuleCall_6_0_1() { return cTargetNoeudIDTerminalRuleCall_6_0_1; }

		//"type"
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }

		//arcType=ArcKindType
		public Assignment getArcTypeAssignment_8() { return cArcTypeAssignment_8; }

		//ArcKindType
		public RuleCall getArcTypeArcKindTypeEnumRuleCall_8_0() { return cArcTypeArcKindTypeEnumRuleCall_8_0; }

		//"weight"
		public Keyword getWeightKeyword_9() { return cWeightKeyword_9; }

		//weight=INT
		public Assignment getWeightAssignment_10() { return cWeightAssignment_10; }

		//INT
		public RuleCall getWeightINTTerminalRuleCall_10_0() { return cWeightINTTerminalRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class NoeudElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Noeud");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPlaceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Noeud:
		//	Transition | Place;
		public ParserRule getRule() { return rule; }

		//Transition | Place
		public Alternatives getAlternatives() { return cAlternatives; }

		//Transition
		public RuleCall getTransitionParserRuleCall_0() { return cTransitionParserRuleCall_0; }

		//Place
		public RuleCall getPlaceParserRuleCall_1() { return cPlaceParserRuleCall_1; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMinTimeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMinTimeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMinTimeINTTerminalRuleCall_3_1_0 = (RuleCall)cMinTimeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMaxTimeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMaxTimeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMaxTimeINTTerminalRuleCall_4_1_0 = (RuleCall)cMaxTimeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Transition:
		//	"transition" name=ID "{" ("minTime" minTime=INT)? ("maxTime" maxTime=INT)? "}";
		public ParserRule getRule() { return rule; }

		//"transition" name=ID "{" ("minTime" minTime=INT)? ("maxTime" maxTime=INT)? "}"
		public Group getGroup() { return cGroup; }

		//"transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("minTime" minTime=INT)?
		public Group getGroup_3() { return cGroup_3; }

		//"minTime"
		public Keyword getMinTimeKeyword_3_0() { return cMinTimeKeyword_3_0; }

		//minTime=INT
		public Assignment getMinTimeAssignment_3_1() { return cMinTimeAssignment_3_1; }

		//INT
		public RuleCall getMinTimeINTTerminalRuleCall_3_1_0() { return cMinTimeINTTerminalRuleCall_3_1_0; }

		//("maxTime" maxTime=INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"maxTime"
		public Keyword getMaxTimeKeyword_4_0() { return cMaxTimeKeyword_4_0; }

		//maxTime=INT
		public Assignment getMaxTimeAssignment_4_1() { return cMaxTimeAssignment_4_1; }

		//INT
		public RuleCall getMaxTimeINTTerminalRuleCall_4_1_0() { return cMaxTimeINTTerminalRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PlaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Place");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMarkingKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMarkingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMarkingINTTerminalRuleCall_4_0 = (RuleCall)cMarkingAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Place:
		//	"place" name=ID "{" "marking" marking=INT "}";
		public ParserRule getRule() { return rule; }

		//"place" name=ID "{" "marking" marking=INT "}"
		public Group getGroup() { return cGroup; }

		//"place"
		public Keyword getPlaceKeyword_0() { return cPlaceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"marking"
		public Keyword getMarkingKeyword_3() { return cMarkingKeyword_3; }

		//marking=INT
		public Assignment getMarkingAssignment_4() { return cMarkingAssignment_4; }

		//INT
		public RuleCall getMarkingINTTerminalRuleCall_4_0() { return cMarkingINTTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	
	public class ArcKindTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ArcKindType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNormalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNormalNormalKeyword_0_0 = (Keyword)cNormalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRead_arcEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRead_arcRead_arcKeyword_1_0 = (Keyword)cRead_arcEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ArcKindType:
		//	normal | read_arc;
		public EnumRule getRule() { return rule; }

		//normal | read_arc
		public Alternatives getAlternatives() { return cAlternatives; }

		//normal
		public EnumLiteralDeclaration getNormalEnumLiteralDeclaration_0() { return cNormalEnumLiteralDeclaration_0; }

		//"normal"
		public Keyword getNormalNormalKeyword_0_0() { return cNormalNormalKeyword_0_0; }

		//read_arc
		public EnumLiteralDeclaration getRead_arcEnumLiteralDeclaration_1() { return cRead_arcEnumLiteralDeclaration_1; }

		//"read_arc"
		public Keyword getRead_arcRead_arcKeyword_1_0() { return cRead_arcRead_arcKeyword_1_0; }
	}
	
	private PetriNetElements pPetriNet;
	private ArcElements pArc;
	private NoeudElements pNoeud;
	private TransitionElements pTransition;
	private PlaceElements pPlace;
	private ArcKindTypeElements unknownRuleArcKindType;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PetrinetGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.insa.petrinet.Petrinet".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PetriNet:
	//	"petrinet" name=ID "{" noeuds+=Noeud* arcs+=Arc* "}";
	public PetriNetElements getPetriNetAccess() {
		return (pPetriNet != null) ? pPetriNet : (pPetriNet = new PetriNetElements());
	}
	
	public ParserRule getPetriNetRule() {
		return getPetriNetAccess().getRule();
	}

	//Arc:
	//	"arc" name=ID "{" "source" source=[Noeud] "target" target=[Noeud] "type" arcType=ArcKindType "weight" weight=INT "}";
	public ArcElements getArcAccess() {
		return (pArc != null) ? pArc : (pArc = new ArcElements());
	}
	
	public ParserRule getArcRule() {
		return getArcAccess().getRule();
	}

	//Noeud:
	//	Transition | Place;
	public NoeudElements getNoeudAccess() {
		return (pNoeud != null) ? pNoeud : (pNoeud = new NoeudElements());
	}
	
	public ParserRule getNoeudRule() {
		return getNoeudAccess().getRule();
	}

	//Transition:
	//	"transition" name=ID "{" ("minTime" minTime=INT)? ("maxTime" maxTime=INT)? "}";
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//Place:
	//	"place" name=ID "{" "marking" marking=INT "}";
	public PlaceElements getPlaceAccess() {
		return (pPlace != null) ? pPlace : (pPlace = new PlaceElements());
	}
	
	public ParserRule getPlaceRule() {
		return getPlaceAccess().getRule();
	}

	//enum ArcKindType:
	//	normal | read_arc;
	public ArcKindTypeElements getArcKindTypeAccess() {
		return (unknownRuleArcKindType != null) ? unknownRuleArcKindType : (unknownRuleArcKindType = new ArcKindTypeElements());
	}
	
	public EnumRule getArcKindTypeRule() {
		return getArcKindTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
