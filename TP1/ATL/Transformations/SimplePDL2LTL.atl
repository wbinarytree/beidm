
query SimplePDL2LTL = 
	let repertoire: String = '/home/alex/workspace/ATL/Models/' in
		simplepdl!Process.allInstances()
			->select(spdl | spdl.toLTL().writeTo(repertoire + spdl.name + '.ltl'));

-- concatenate all the strings of a sequence, adding the before char
-- before each string and the after char after.
helper
def: concatenateStrings(strings: Sequence(String),
		before: String, after: String): String =
	strings->iterate(s; acc: String = '' | acc + before + s + after);

helper 
context simplepdl!Process
def: toLTL(): String =
	'op finished = ' + (
		let processElementsStrings: Sequence(String) = 
			self.processElements->collect(p | p.toLTL())
		in
			thisModule.concatenateStrings(processElementsStrings, '', '')
	) + ';'
;

helper
context simplepdl!WorkDefinition
def: toLTL(): String =
	self.name + '_finished /\\ '
;

helper
context simplepdl!WorkSequence
def: toLTL(): String =
	''
;