/*
* generated by Xtext
*/
grammar InternalPetrinet;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package fr.insa.petrinet.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.insa.petrinet.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.insa.petrinet.services.PetrinetGrammarAccess;

}

@parser::members {

 	private PetrinetGrammarAccess grammarAccess;
 	
    public InternalPetrinetParser(TokenStream input, PetrinetGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "PetriNet";	
   	}
   	
   	@Override
   	protected PetrinetGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePetriNet
entryRulePetriNet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPetriNetRule()); }
	 iv_rulePetriNet=rulePetriNet 
	 { $current=$iv_rulePetriNet.current; } 
	 EOF 
;

// Rule PetriNet
rulePetriNet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='petrinet' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPetriNetAccess().getPetrinetKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPetriNetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPetriNetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPetriNetAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPetriNetAccess().getNoeudsNoeudParserRuleCall_3_0()); 
	    }
		lv_noeuds_3_0=ruleNoeud		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPetriNetRule());
	        }
       		add(
       			$current, 
       			"noeuds",
        		lv_noeuds_3_0, 
        		"Noeud");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPetriNetAccess().getArcsArcParserRuleCall_4_0()); 
	    }
		lv_arcs_4_0=ruleArc		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPetriNetRule());
	        }
       		add(
       			$current, 
       			"arcs",
        		lv_arcs_4_0, 
        		"Arc");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPetriNetAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleArc
entryRuleArc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArcRule()); }
	 iv_ruleArc=ruleArc 
	 { $current=$iv_ruleArc.current; } 
	 EOF 
;

// Rule Arc
ruleArc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='arc' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArcAccess().getArcKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getArcAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArcRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArcAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='source' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArcAccess().getSourceKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArcRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getArcAccess().getSourceNoeudCrossReference_4_0()); 
	}

)
)	otherlv_5='target' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArcAccess().getTargetKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArcRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getArcAccess().getTargetNoeudCrossReference_6_0()); 
	}

)
)	otherlv_7='type' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArcAccess().getTypeKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArcAccess().getArcTypeArcKindTypeEnumRuleCall_8_0()); 
	    }
		lv_arcType_8_0=ruleArcKindType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArcRule());
	        }
       		set(
       			$current, 
       			"arcType",
        		lv_arcType_8_0, 
        		"ArcKindType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='weight' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArcAccess().getWeightKeyword_9());
    }
(
(
		lv_weight_10_0=RULE_INT
		{
			newLeafNode(lv_weight_10_0, grammarAccess.getArcAccess().getWeightINTTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArcRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_10_0, 
        		"INT");
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getArcAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleNoeud
entryRuleNoeud returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoeudRule()); }
	 iv_ruleNoeud=ruleNoeud 
	 { $current=$iv_ruleNoeud.current; } 
	 EOF 
;

// Rule Noeud
ruleNoeud returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoeudAccess().getTransitionParserRuleCall_0()); 
    }
    this_Transition_0=ruleTransition
    { 
        $current = $this_Transition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoeudAccess().getPlaceParserRuleCall_1()); 
    }
    this_Place_1=rulePlace
    { 
        $current = $this_Place_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='minTime' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getMinTimeKeyword_3_0());
    }
(
(
		lv_minTime_4_0=RULE_INT
		{
			newLeafNode(lv_minTime_4_0, grammarAccess.getTransitionAccess().getMinTimeINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"minTime",
        		lv_minTime_4_0, 
        		"INT");
	    }

)
))?(	otherlv_5='maxTime' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getMaxTimeKeyword_4_0());
    }
(
(
		lv_maxTime_6_0=RULE_INT
		{
			newLeafNode(lv_maxTime_6_0, grammarAccess.getTransitionAccess().getMaxTimeINTTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxTime",
        		lv_maxTime_6_0, 
        		"INT");
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePlace
entryRulePlace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlaceRule()); }
	 iv_rulePlace=rulePlace 
	 { $current=$iv_rulePlace.current; } 
	 EOF 
;

// Rule Place
rulePlace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='place' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPlaceAccess().getPlaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPlaceAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='marking' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPlaceAccess().getMarkingKeyword_3());
    }
(
(
		lv_marking_4_0=RULE_INT
		{
			newLeafNode(lv_marking_4_0, grammarAccess.getPlaceAccess().getMarkingINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"marking",
        		lv_marking_4_0, 
        		"INT");
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPlaceAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Rule ArcKindType
ruleArcKindType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='normal' 
	{
        $current = grammarAccess.getArcKindTypeAccess().getNormalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getArcKindTypeAccess().getNormalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='read_arc' 
	{
        $current = grammarAccess.getArcKindTypeAccess().getRead_arcEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getArcKindTypeAccess().getRead_arcEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


